<style lang="scss">
  @import "../css/base";

  .van-cell__title {
    font-size: px2rpx(18);
    color: #333333;
  }

  .van-cell__value {
    color: #333333 !important;
    font-size: px2rpx(14);
  }
  .van-cell__label{
    color: #f44 !important;
    text-align: right !important;
    margin-right: px2rpx(-20);
  }

  .van-field__body {
    input {
      text-align: right;
    }
    textarea {
      text-align: right;
    }
  }
  .van-field__error-message{
    text-align: right !important;
  }

  .van-stepper__minus::after, .van-stepper__minus::before,
  .van-stepper__plus::after, .van-stepper__plus::before{
    background-color: white !important;
  }

  .van-stepper__minus--disabled::after,.van-stepper__minus--disabled::before,
  .van-stepper__plus--disabled::after,.van-stepper__plus--disabled::before {
    background-color:#c9c9c9 !important;
  }

  .flim-service-buy{
    .submit-bar{
      position: fixed;
      left: 0;
      right: 0;
      bottom: 0;
    }
    .title-icon{
      width: px2rpx(3);
      height: px2rpx(13);
    }
    .title-text{
      font-size: px2rpx(13);
      color: #FE9F05;
      font-weight: bold;
      margin-left: px2rpx(7);
    }
    .van-cell{
      align-items: center;
    }
    .value-class{
      flex: 2;
    }
    .right-value{
      display: flex;
      align-items: center;
      align-self: flex-end;
      justify-content: flex-end;
      .minus-plus-class{
        background-color: #FFC207;
        width: px2rpx(18);
        height: px2rpx(18);
        color: white;
        border-width: 0;
        border-radius: px2rpx(2);
      }
      .minus-plus-class:active{
        background-color: #dfac07;
      }
      .input-class{
        border-width: 0;
      }
      .unit-price{
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        text:nth-child(1){
          color: #333333;
          font-size: px2rpx(12);
        }
        text:nth-child(2){
          color: #999999;
          font-size: px2rpx(12);
          line-height: px2rpx(12);
        }
      }
      .stepper{
        margin-left: px2rpx(38);
      }
    }
    .terms-service-container{
      margin-top: px2rpx(20);
      display: flex;
      align-items: center;
      .van-checkbox__icon--round{
        border-radius: px2rpx(2);
        transform: scale(.8);
      }
      .van-checkbox__label{
        line-height: 0 !important;
      }
      .van-checkbox__icon{
        border-color: #FFC207;
      }
      .van-checkbox{
        line-height: 0;
        margin-left: px2rpx(15);
        margin-right: px2rpx(8);
      }
      text:nth-child(2){
        font-size: px2rpx(13);
        line-height: px2rpx(13);
        color: #999999;
      }
      .term-service-text{
        margin-left: px2rpx(4);
        font-size: px2rpx(13);
        line-height: px2rpx(13);
        color: #FE9F05;
      }
    }
    .term-service-err-msg{
      margin-left: px2rpx(15);
      margin-top: px2rpx(5);
      font-size: px2rpx(12);
      line-height: px2rpx(12);
      color: #F44;
    }
  }
</style>
<template>
  <view class="flim-service-buy">
    <form bindsubmit="formSubmit">
      <van-cell title-class="title-text" title="收件人信息">
        <image class="title-icon" slot="icon" src="../img/title_icon.png" />
      </van-cell>
      <van-field name="contact" id="contact" bind:input="bindInput" maxlength="10" label="联系人"
                 placeholder="请填写联系人姓名" error-message="{{errMsg.contact}}"/>
      <van-field name="phone" id="phone" bind:input="bindInput" maxlength="11" label="手机号"
                 placeholder="请填写手机号" type="number" error-message="{{errMsg.phone}}"/>
      <picker name="region" mode="region" value="{{region}}" bindchange="bindRegionChange">
        <van-cell title="所在地区" value="{{region[0]}}{{region[1]}}{{region[2]}}" label="{{errMsg.region}}" is-link/>
      </picker>
      <van-field name="address" id="address" bind:input="bindInput" maxlength="100" label="收件详细地址"
                 placeholder="详细地址，例16号楼5单元301室" title-width="220rpx" error-message="{{errMsg.address}}"/>
      <van-cell title-class="title-text" title="胶片转印服务购买">
        <image class="title-icon" slot="icon" src="../img/title_icon.png" />
      </van-cell>
      <van-cell title="X光片" value-class="value-class" label="{{errMsg.x_ray}}">
        <view class="right-value" slot="">
          <view class="unit-price">
            <text>¥ {{x_ray_unit_price}} ／张</text>
            <!--<text>JPY 24,840 ／张</text>-->
          </view>
          <view class="stepper">
            <van-stepper id="x_ray" name="x_ray" minus-class="minus-plus-class" plus-class="minus-plus-class" input-class="input-class"
                         value="{{ 0 }}" min="0" bind:change="onChange" />
          </view>
        </view>
      </van-cell>
      <van-cell title="核磁共振CT片" value-class="value-class" label="{{errMsg.nuclear_magnetic_ct}}">
        <view class="right-value" slot="">
          <view class="unit-price">
            <text>¥ {{nuclear_magnetic_ct_unit_price}} ／张</text>
            <!--<text>JPY 24,840 ／张</text>-->
          </view>
          <view class="stepper">
            <van-stepper id="nuclear_magnetic_ct" name="nuclear_magnetic_ct" minus-class="minus-plus-class" plus-class="minus-plus-class" input-class="input-class"
                         value="{{ 0 }}" min="0" bind:change="onChange" />
          </view>
        </view>
      </van-cell>

      <view class="terms-service-container">
        <van-checkbox name="terms_service" checked-color="#FFC207" value="{{ checked }}" bind:change="onCheckBoxChange"></van-checkbox>
        <text>您已经阅读并同意</text>
        <navigator class="term-service-text" url="archivesImage">
          服务条款
        </navigator>
      </view>
      <text class="term-service-err-msg">{{errMsg.termService}}</text>

      <submitbar :priceRMB.sync="priceRMB" :priceJPY.sync="priceJPY" :buyListCount.sync="buyListCount"></submitbar>
    </form>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import utils from '../mixins/utils'
  import submitBar from '../components/submitBar'

  export default class flimServiceBuy extends wepy.page {
    config = {
      navigationBarTitleText: '胶片转印服务购买',
      "usingComponents": {
        "van-field": "../components/vant/field/index",
        "van-cell": "../components/vant/cell/index",
        "van-stepper": "../components/vant/stepper/index",
        "van-checkbox": "../components/vant/checkbox/index",
        "van-checkbox-group": "../components/vant/checkbox-group/index"
      }
    };
    components = {
      submitbar:submitBar
    };

    mixins = [utils];

    data = {
      checked:false,
      region: ["", "", ""],
      priceRMB:'0',
      priceJPY:'0',
      buyListCount:0,
      errMsg:{
        contact:'',
        phone:'',
        region:'',
        address:'',
        x_ray:'',
        nuclear_magnetic_ct:'',
        termService:'',
      },
      nuclear_magnetic_ct_num:0,
      nuclear_magnetic_ct_price:0,
      nuclear_magnetic_ct_unit_price:80,
      x_ray_num:0,
      x_ray_price:0,
      x_ray_unit_price:80,
      regionValue:'',
    };

    watch = {
    };

    methods = {
      onChange(e){
        // console.log('e',e);
        if (e.currentTarget.id == 'nuclear_magnetic_ct') {
          this.errMsg.nuclear_magnetic_ct='';
          this.nuclear_magnetic_ct_num = e.detail;
          this.nuclear_magnetic_ct_price = this.nuclear_magnetic_ct_num * this.nuclear_magnetic_ct_unit_price;
        }else {
          this.errMsg.x_ray='';
          this.x_ray_num = e.detail;
          this.x_ray_price = this.x_ray_num * this.x_ray_unit_price;
        }
        this.buyListCount = this.nuclear_magnetic_ct_num + this.x_ray_num;
        this.priceRMB = this.x_ray_price + this.nuclear_magnetic_ct_price;
      },
      onCheckBoxChange(e){
        this.checked = e.detail;
        this.errMsg.termService = '';
      },
      formSubmit(e) {
        let value = e.detail.value;
        console.log("value", value);
        let isSuccess = false;
        this.errMsg.contact='';
        this.errMsg.phone='';
        this.errMsg.address='';
        let contact = value.contact;
        let phone = value.phone;
        let address = value.address;
        let region = value.region;
        let reg = new RegExp( ',' , "g" );
        let regionString = region.toString().replace(reg,"");
        if (contact && phone && regionString && address && (value.x_ray !== 0 || value.nuclear_magnetic_ct !== 0) && this.checked){
          if (this.checkPhoneNumber(phone,false)){
            isSuccess = true;
          }else{
            this.errMsg.phone='手机号格式不正确';
          }
        }else {
          if (!contact) {
            this.errMsg.contact='请填写联系人';
          }
          if (!phone) {
            this.errMsg.phone='请填写手机号';
          }
          if (!regionString) {
            this.errMsg.region='请选择所在地区';
          }
          if (!address) {
            this.errMsg.address='请填写详细地址';
          }
          if (value.x_ray === 0 && value.nuclear_magnetic_ct === 0) {
            this.errMsg.x_ray='请选择数量';
          }

          if (!this.checked) {
            this.errMsg.termService='请阅读并同意服务条款';
          }
        }
        if (isSuccess) {
          wx.showToast({
            title: '支付功能即将上线，敬请期待',
            icon: 'none'
          });
        }
      },
      bindInput(e){
        // console.log("bindInput", e);
        switch (e.currentTarget.id) {
          case "contact":
            this.errMsg.contact='';
            break;
          case "phone":
            this.errMsg.phone='';
            break;
          case "address":
            this.errMsg.address='';
            break;
        }
      },
      bindRegionChange(e) {
        this.regionValue = this.convertArrayByComma(e.detail.value);
        let regionCode = this.convertArrayByComma(e.detail.code);

        if (this.regionValue && (!e.detail.code || e.detail.code.length == 0)) {
          wx.showModal({
            title: '提示',
            content: '当前微信版本过低，无法使用该功能，请升级到最新微信版本后重试。'
          });
          return;
        }
        this.region = e.detail.value;
        this.errMsg.region='';
      },
    };

    toLogin() {
      this.$navigate('login');
    }

    onLoad(options, data) {
      if (!options.preload) {
        options.preload = data.preload;
      }
      this.$wxpage.options = options;
    }
  }
</script>
