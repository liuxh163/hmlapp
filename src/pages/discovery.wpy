<style lang="scss" src="../css/discovery.scss">
</style>
<template>
  <view class="main discovery">
    <van-tabs custom-class="custom-class" animated sticky color="#FFC207"
              line-width="{{lineWidth}}" scroll-top="{{ scrollTop }}" offset-top="{{offsetTop}}" active="{{ 0 }}"
              bind:change="onChange">
      <van-tab title="发现">
        <view class="discovery-view">
          <view class="discovery-container">
            <view class="left-container content-container">
              <block wx:key="item.id" wx:for="{{discoveryListLeft}}">
                <view class="discovery-item" @tap="bindItem(1,{{item}})">
                  <view class="location">
                    <image src="../img/location.png"/>
                    <text>{{item.location}}</text>
                  </view>
                  <image mode="aspectFill" class="thumb" src="{{item.pictures[0].path}}"/>
                  <text class="desc">{{item.content}}</text>
                  <view class="info">
                    <view class="avatar-container">
                      <image mode="aspectFill" src="{{item.iconPath?item.iconPath:'../img/icon_avatar.svg'}}"/>
                      <text>{{item.userName}}</text>
                    </view>
                    <view class="like-container">
                      <image src="../img/icon_view.png"/>
                      <text>{{item.viewNum}}</text>
                    </view>
                  </view>
                </view>
              </block>
            </view>
            <view class="right-container content-container">
              <block wx:key="item.id" wx:for="{{discoveryListRight}}">
                <view class="discovery-item" @tap="bindItem(1,{{item}})">
                  <view class="location">
                    <image src="../img/location.png"/>
                    <text>{{item.location}}</text>
                  </view>
                  <image mode="aspectFill" class="thumb" src="{{item.pictures[0].path}}"/>
                  <text class="desc">{{item.content}}</text>
                  <view class="info">
                    <view class="avatar-container">
                      <image mode="aspectFill" src="{{item.iconPath?item.iconPath:'../img/icon_avatar.svg'}}"/>
                      <text>{{item.userName}}</text>
                    </view>
                    <view class="like-container">
                      <image src="../img/icon_view.png"/>
                      <text>{{item.viewNum}}</text>
                    </view>
                  </view>
                </view>
              </block>
            </view>
          </view>
        </view>
      </van-tab>
      <van-tab title="说说">
        <view class="talk-about">
          <block wx:key="item.id" wx:for="{{talkAboutList}}">
            <view class="item-view" @tap="bindItem(2,{{item}})">
              <view class="avatar-container">
                <image mode="aspectFill" class="avatar" src="{{item.iconPath?item.iconPath:'../img/icon_avatar.svg'}}"></image>
                <text>{{item.userName}}</text>
              </view>
              <text class="content">{{item.content}}</text>
              <view class="image-container">
                <view class="image-list">
                  <block wx:key="imageItem.id" wx:for-item="imageItem" wx:for="{{item.pictures}}">
                    <image mode="aspectFill" catchtap="previewImage({{imageItem.path}},{{item.pictures}})" src="{{imageItem.path}}"></image>
                  </block>
                </view>
                <view class="operate-view">
                  <view class="left" hidden="{{true}}">
                    <text>查看全文</text>
                  </view>
                  <view class="right">
                    <view class="common view-view">
                      <image src="../img/icon_view.png"/>
                      <text>{{item.viewNum}}</text>
                    </view>
                    <view class="common like-view">
                      <image src="../img/like.png"/>
                      <text>{{item.thumbNum}}</text>
                    </view>
                    <view class="common comment-view">
                      <image src="../img/comment.png"/>
                      <text>{{item.commentNum}}</text>
                    </view>
                  </view>
                </view>
              </view>
              <view style="width: 100%;height: 20rpx;background-color: #E9E9E9;"></view>
              <view class="tag" wx:if="{{item.isHot}}">
                <text>热</text>
              </view>
            </view>
          </block>
        </view>
      </van-tab>
    </van-tabs>
    <image wx:if="{{currentIndex == 0}}" class="discovery-add" @tap="bindAddTap" src="../img/icon_discovery_add.png"/>
    <image wx:if="{{currentIndex == 1}}" class="discovery-add" @tap="bindAddTap" src="../img/edit.png"/>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import commonApi from '../mixins/commonApi'
  import {httpUrl} from '../utils/httpUrl'

  export default class Discovery extends wepy.page {
    config = {
      navigationBarTitleText: '发现',
      enablePullDownRefresh:true,
      "usingComponents": {
        "van-tab": "../components/vant/tab/index",
        "van-tabs": "../components/vant/tabs/index"
      }
    };
    components = {};

    mixins = [commonApi];

    data = {
      isHidden:false,
      scrollTop: 0,
      offsetTop:0,
      tab1ScrollTop:0,
      tab2ScrollTop:0,
      flag2:false,
      lineWidth:188,
      flag:true,
      scrolling:false,
      discoveryListLeft: [],
      discoveryListRight: [],
      discoveryList: [],
      talkAboutList:[],
      currentIndex:0,
    };

    methods = {
      previewImage(currentPath,paths){
        let pathStrings = paths.map(function (item) {
          return item.path;
        });
        wx.previewImage({
          current:currentPath,
          urls: pathStrings // 需要预览的图片http链接列表
        })
      },
      bindItem(type,item){
        this.$preload('item', item);
        if (type == 1){
          // 发现
          this.$navigate("discoverydetail/discoveryDetail");
        } else {
          // 说说
          this.$navigate("discoverydetail/talkAboutDetail");
        }
      },
      bindAddTap(){
        if (this.currentIndex == 0){
          this.$navigate("takePhoto");
        }else {
          this.$navigate('publishPost?pageType=2');
        }
      },
      onChange(e){
        let detail = e.detail;
        console.log("tap index",detail.index);
        let t = this;
        t.currentIndex = detail.index;
        t.scrolling = true;
        if (detail.index == 0){
          this.flag = true;
          this.flag2 = false;
          setTimeout(function() {
            wx.pageScrollTo({
              scrollTop: t.tab1ScrollTop,
              duration: 0
            });
            setTimeout(function() {
              t.scrolling = false;
            },100);
          },150);
        }else {
          this.flag = false;
          this.flag2 = true;
          console.log('tab2ScrollTop',t.tab2ScrollTop);
          setTimeout(function() {
            wx.pageScrollTo({
              scrollTop: t.tab2ScrollTop,
              duration: 0
            });
            setTimeout(function() {
              t.scrolling = false;
            },100);
          },150);
        }
      }
    };

    onPageScroll(e) {
      if (e.scrollTop > this.scrollTop) {
        //向下滚动
        // console.log('向下 ')
        if (e.scrollTop > 40  && !this.scrolling){
          // console.log('隐藏tabs');
          this.isHidden = true;
          this.offsetTop = -100;
        }
      } else {
        //向上滚动
        // console.log('向上滚动 ')
        this.isHidden = false;
        this.offsetTop = 0;
      }
      this.scrollTop = e.scrollTop;
      if (this.flag) {
        this.tab1ScrollTop = this.scrollTop;
      }
      if (this.flag2) {
        this.tab2ScrollTop = this.scrollTop;
      }
      this.$apply();
    }

    analyticalDiscoveryData(data){
      this.discoveryListLeft = [];
      this.discoveryListRight = [];
      for (let i =0;i < data.length;i++){
        if (i % 2 === 0) {
          this.discoveryListLeft.push(data[i]);
        }else {
          this.discoveryListRight.push(data[i]);
        }
      }
      this.$apply();
    }

    getPosts(id) {
      let postData = {
        "page": 1,
        "number": 10000
      };
      this.sendRequest(httpUrl.posts.replace(":id",id), 'GET', postData, res => {
        wx.stopPullDownRefresh();
        if (res) {
          if (id == 1){
            this.discoveryList = res.posts;
            this.analyticalDiscoveryData(this.discoveryList);
          }else {
            this.talkAboutList = res.posts;
          }
          this.$apply();
        }
      },err =>{
        wx.stopPullDownRefresh();
      })
    }

    initData(){
      this.getPosts(1);
      this.getPosts(2);
    }

    toLogin(){
      this.$navigate('login');
    }

    onPullDownRefresh(){
      this.initData();
    }

    onLoad(options,data) {
      if (!options.preload){
        options.preload = data.preload;
      }
      this.$wxpage.options = options;

      let t = this;
      wx.getSystemInfo({
        success(res) {
          t.lineWidth = res.screenWidth / 2;
        }
      });

      this.initData();
    }
  }
</script>
