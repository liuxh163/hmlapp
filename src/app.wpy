<style lang="scss">
  @import "css/base";

  .container {
    height: 100%;
    padding: px2rpx(18) px2rpx(18) px2rpx(35);
  }
</style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'

  import {setStore} from 'wepy-redux'
  import configStore from './store'
  import request from './utils/httpUtil'
  import {httpUrl} from './utils/httpUrl'

  const store = configStore();
  setStore(store);

  export default class extends wepy.app {
    config = {
      pages: [
        'pages/index',
        'pages/discovery',
        'pages/mine',
        'pages/webView',
      ],
      window: {
        backgroundTextStyle: "light",
        navigationBarBackgroundColor: "#FFF",
        navigationBarTitleText: "海马",
        navigationBarTextStyle: "black",
      },
      tabBar:{
        color:"#666666",
        selectedColor:"#F19F00",
        list:[
          {
            pagePath:"pages/index",
            text:"首页",
          },
          {
            pagePath:"pages/discovery",
            text:"发现",
          },
          {
            pagePath:"pages/mine",
            text:"我的",
          },
        ]
      }
    };

    globalData = {
      userInfo: null,
      goldNum:0,
      AuthErrorCount:0,
      isReLogin:false,  // 是否是token过期重新登录
      isLogin:false,  // 是否登录成功
      // BASE_URL:"http://192.168.5.165:9020/test/", // 测试
      BASE_URL:"http://192.168.1.198:9020/product/", // 生产
    };

    constructor() {
      super();
      this.use('requestfix');
      this.use('promisify');

      // 全局注册数组根据下标删除元素方法
      Array.prototype.del = function (index) {
        if (isNaN(index) || index >= this.length) {
          return false;
        }
        for (var i = 0, n = 0; i < this.length; i++) {
          if (this[i] != this[index]) {
            this[n++] = this[i];
          }
        }
        this.length -= 1;
      };

      // 判断两个数组的内容和顺序是否相同
      Array.prototype.equals = function (array) {
        // if the other array is a falsy value, return
        if (!array)
          return false;

        // compare lengths - can save a lot of time
        if (this.length != array.length)
          return false;

        for (var i = 0, l = this.length; i < l; i++) {
          // Check if we have nested arrays
          if (this[i] instanceof Array && array[i] instanceof Array) {
            // recurse into the nested arrays
            if (!this[i].equals(array[i]))
              return false;
          }
          else if (this[i] != array[i]) {
            // Warning - two different object instances will never be equal: {x:20} != {x:20}
            return false;
          }
        }
        return true;
      };
    }

    // 小程序启动回调
    onLaunch() {

    }

    // 检查本地是否有openID
    checkOpenID(resolve){
      let openID = wx.getStorageSync('t_openID');
      if (openID){
        // 有openID，直接掉后台登录接口通过openID换token
        this.login(openID,resolve);
      }else {
        // 没有openID，先调用wx.login获取code
        this.wxLogin(resolve);
      }
    }

    // 微信登录
    wxLogin(cb) {
      let self = this;
      wx.showLoading({
        title: '登录中',
      });
      wx.login({
        success: function (res) {
          if (res.code) {
            // 通过code调用后台注册接口，获取openID和token
            self.register(res.code,cb);
          } else {
            self.globalData.isLogin = false;
            wx.hideLoading();
            console.log('登录失败！' + res.errMsg);
            wx.showToast({
              title: '登录失败，请稍后再试',
              icon:"none"
            })
          }
        },
        fail:function (err) {
          self.globalData.isLogin = false;
          console.log("wxlogin err：" + err);
          wx.hideLoading();
          wx.showToast({
            title: '登录失败，请稍后再试',
            icon:"none"
          })
        }
      });
    }

    // 注册
    register(code,resolve){
      let openID = wx.getStorageSync('t_openID');
      let _url = httpUrl.register;
      let sysInfo = wx.getSystemInfoSync();

      let postData = {
        "openid":openID,
        "registersource":"WXXCX",
        "usertype":"06",
        "clientSystem":sysInfo.model,
        "clientSystemVersion":sysInfo.system,
        "clientTypt":sysInfo.platform,
        "jscode":code,
      };

      request({
        url: _url,
        method: 'POST',
        data: postData,
        loadingMsg:"登录中"
      }).then((res) => {
        if (res.data && res.data.isSuccess == "true" && res.data.rows) {
          this.globalData.isLogin = true;
          console.log("登录成功！");
          try {
            wx.setStorageSync('t_token',res.data.rows.token);
            wx.setStorageSync('t_openID',res.data.rows.openid);
            wx.setStorageSync('t_goldNum',res.data.rows.playerInfo.gold_num);
            this.globalData.goldNum = res.data.rows.playerInfo.gold_num;
            resolve && resolve(res.data.rows)
          } catch (e) {
            console.log("e：" +e);
          }
        } else {
          this.globalData.isLogin = false;
          let msg = "服务器繁忙，请稍后再试";
          if (res.data && res.data.message) {
            console.log("exception：" + res.data.message);
            msg = res.data.message;
          }
          wx.showToast({
            title: msg,
            icon:"none"
          })
        }
      }).catch((err) => {
        this.globalData.isLogin = false;
        console.log("error--->code：" + err.statusCode+"，msg：" + err.errMsg);
        wx.showToast({
          title: "服务器繁忙，请稍后再试",
          icon:"none"
        })
      })
    }

    // 后台服务登录
    login(openID,resolve){
      let _url = httpUrl.login;
      let postData = {
        "openid":openID,
        "registersource":"WXXCX",
        "usertype":"06"
      };

      request({
        url: _url,
        method: 'POST',
        data: postData,
        loadingMsg:"登录中"
      }).then((res) => {
        if (res.data && res.data.isSuccess == "true" && res.data.rows) {
          this.globalData.isLogin = true;
          try {
            wx.setStorageSync('t_token',res.data.rows.token);
            wx.setStorageSync('t_openID',res.data.rows.openid);
            wx.setStorageSync('gold_num',res.data.rows.playerInfo.gold_num);
            this.globalData.goldNum = res.data.rows.playerInfo.gold_num;
            resolve && resolve(res.data.rows)
          } catch (e) {
            console.log("e：" +e);
          }
          if (this.globalData.isReLogin){
            this.globalData.isReLogin = false;
            console.log("重新登录成功，刷新当前页面");
            let pages = getCurrentPages();
            let currPage = pages[pages.length - 1];   //当前页面
            currPage.onLoad(currPage.options);
            setTimeout(res =>{
              wx.showToast({
                title: '登录信息过期，已重新登录',
                icon: 'none'
              });
            },500);
          }else {
            console.log("登录成功！");
          }
        } else {
          this.globalData.isLogin = false;
          let msg = "服务器繁忙，请稍后再试";
          if (res.data && res.data.message) {
            console.log("exception：" + res.data.message);
            msg = res.data.message;
          }
          wx.showToast({
            title: msg,
            icon:"none"
          });
          if (res.data.msgCode == "10030"){
            console.log("openID无效，移除本地openID，并重新注册");
            wx.removeStorage({
              key: 't_openID',
              success: res =>{
                this.checkOpenID(resolve);
              },
              fail: err =>{
                console.log("从本地移除openID报错",err);
                wx.setStorageSync('t_openID',"");
              }
            })
          }
        }
      }).catch((err) => {
        this.globalData.isLogin = false;
        console.log("error--->code：" + err.statusCode+"，msg：" + err.errMsg);
        wx.showToast({
          title: "服务器繁忙，请稍后再试",
          icon:"none"
        })
      })
    }

    // 暂不调用
    getUserInfo(cb) {
      const that = this;
      if (this.globalData.userInfo) {
        return this.globalData.userInfo
      }
      wepy.getUserInfo({
        lang: "zh_CN",
        success(res) {
          that.globalData.userInfo = res.userInfo;
          cb && cb(res.userInfo)
        }
      })
    }
  }
</script>
